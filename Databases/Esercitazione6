-- Esercizio 1
EXPLAIN(SELECT CS.nome
FROM CorsoStudi AS CS
WHERE CS.nome ILIKE '%informatica')

-- Con indice
CREATE INDEX CS_nome_index ON CorsoStudi(nome varchar_pattern_ops);
ANALYZE CorsoStudi;

-- Risposta: non cambia nulla, non si può utilizzare l'indice
DROP INDEX IF EXISTS CS_nome_index

-- Esercizio 2
EXPLAIN(SELECT I.nomeins
FROM Insegn AS I
WHERE I.nomeins LIKE 'Teoria%')

-- Con indice
CREATE INDEX I_nomeins ON Insegn(nomeins varchar_pattern_ops);
ANALYZE Insegn;

-- Risposta: si passa dai 198 accessi ai 47
DROP INDEX IF EXISTS I_nomeins

-- Esercizio 3
EXPLAIN
SELECT I.nomeins, IE.id_facolta
FROM InsErogato AS IE JOIN Insegn AS I ON IE.id_insegn = I.id
WHERE IE.annoaccademico = '2013/2014'

-- Con indice
CREATE INDEX IE_id_insegn ON InsErogato(id_insegn); 
CREATE INDEX IE_annoaccademico ON InsErogato USING hash(annoaccademico);
ANALYZE InsErogato;

-- Risposta: si passa dai 6320 accessi ai 3981
DROP INDEX IF EXISTS IE_id_insegn
DROP INDEX IF EXISTS IE_annoaccademico

-- Esercizio 4
EXPLAIN
SELECT CS.nome, CS.codice, CS.abbreviazione
FROM CorsoStudi AS CS
WHERE CS.nome ILIKE '%lingue%'

-- Con indice
-- Non usa l'indice anche se è già definito dal punto 1, a causa della condizione

-- Esercizio 5
EXPLAIN
SELECT IE.id, IE.modulo
FROM InsErogato AS IE
WHERE IE.modulo > 0 AND IE.annoaccademico = '2010/2011' AND IE.id_facolta = 7

-- Con indice
CREATE INDEX IE_annoaccademico ON InsErogato(annoaccademico varchar_pattern_ops); 
CREATE INDEX IE_id_facolta ON InsErogato(id_facolta);
CREATE INDEX IE_modulo ON InsErogato(modulo);
ANALYZE InsErogato;

-- Risposta: si passa dai 6310 accessi ai 1460
DROP INDEX IF EXISTS IE_annoaccademico;
DROP INDEX IF EXISTS IE_id_facolta;
DROP INDEX IF EXISTS IE_modulo

-- Esercizio 6
EXPLAIN
SELECT I.nomeins, D.descrizione
FROM Discriminante AS D JOIN InsErogato AS IE ON D.id = IE.id_discriminante JOIN Insegn AS I ON I.ID = IE.id_insegn
WHERE IE.annoaccademico = '2009/2010' AND IE.crediti IN (3, 5, 12) AND IE.modulo <= 0

-- Con indice
CREATE INDEX IE_annoaccademico_modulo ON InsErogato(annoaccademico varchar_pattern_ops, modulo, id_insegn);
CREATE INDEX IE_crediti ON InsErogato USING hash(crediti);
ANALYZE InsErogato;

-- Risposta: si passa da 6701 accessi a 1677
DROP INDEX IF EXISTS IE_annoaccademico_modulo;
DROP INDEX IF EXISTS IE_crediti;

-- Esercizio 7
EXPLAIN
SELECT I.nomeins, D.descrizione
FROM Discriminante AS D JOIN InsErogato AS IE ON D.id = IE.id_discriminante JOIN Insegn AS I ON I.ID = IE.id_insegn
WHERE IE.annoaccademico = '2008/2009' AND IE.modulo = 0 AND IE.crediti > 9

-- Con indice
CREATE INDEX IE_annoaccademico_modulo_crediti ON InsErogato (annoaccademico varchar_pattern_ops, modulo, crediti, id_insegn, id_discriminante);
CREATE INDEX D_id ON Discriminante(id);
CREATE INDEX I_id ON Insegn(id);
ANALYZE InsErogato;
ANALYZE Discriminante;
ANALYZE Insegn

-- Risposta: si passa da 6603 accessi a 669
DROP INDEX IF EXISTS IE_annoaccademico_modulo_crediti;
DROP INDEX IF EXISTS D_id;
DROP INDEX IF EXISTS I_id

-- Esercizio 8
EXPLAIN
SELECT I.nomeins, D.descrizione, IE.crediti, IE.annierogazione
FROM Discriminante AS D JOIN InsErogato AS IE ON D.id = IE.id_discriminante JOIN Insegn AS I ON I.ID = IE.id_insegn JOIN CorsoStudi AS CS ON CS.id = IE.id_corsostudi
WHERE IE.annoaccademico = '2013/2014' AND IE.modulo = 0 AND CS.nome LIKE 'Laurea in Informatica'
ORDER BY I.nomeins, D.descrizione, IE.crediti, IE.annierogazione

-- Con indice
CREATE INDEX IE_annoaccademico_modulo ON InsErogato(annoaccademico varchar_pattern_ops, modulo);
CREATE INDEX CS_id ON CorsoStudi(id);
CREATE INDEX D_id ON Discriminante(id);
CREATE INDEX I_id ON Insegn(id);
CREATE INDEX CS_nome ON CorsoStudi (nome varchar_pattern_ops);
CREATE INDEX IE_id_insegn_cs ON InsErogato(id_insegn, id_corsostudi);
ANALYZE InsErogato;
ANALYZE CorsoStudi;
ANALYZE Discriminante;
ANALYZE Insegn

-- Risposta: si passa da 6494 accessi a 782

DROP INDEX IF EXISTS IE_annoaccademico_modulo;
DROP INDEX IF EXISTS CS_nome;
DROP INDEX IF EXISTS CS_id;
DROP INDEX IF EXISTS D_id;
DROP INDEX IF EXISTS I_id;
DROP INDEX IF EXISTS IE_id_insegn_cs;

-- Esercizio 9
EXPLAIN
SELECT MAX(IE.crediti) AS massimo
FROM InsErogato AS IE
WHERE IE.annoaccademico = '2013/2014'

-- Con indice
CREATE INDEX IE_annoaccademico ON InsErogato (annoaccademico varchar_pattern_ops);
ANALYZE InsErogato;

-- Risposta: si passa da 5983 accessi a 3632
DROP INDEX IF EXISTS IE_annoaccademico;

-- Esercizio 10
EXPLAIN
SELECT IE.annoaccademico, MAX(IE.crediti) AS massimo, MIN(IE.crediti) AS minimo
FROM InsErogato AS IE
WHERE IE.modulo = 0
GROUP BY IE.annoaccademico

-- Con indice
-- NON funzionano anno accademico e modulo (anche se il costo maggiore deriva dalla scan seq di ie)
DROP INDEX IF EXISTS IE_modulo;

CREATE INDEX IE_modulo ON InsErogato USING hash(modulo);
ANALYZE InsErogato;

-- Risposta: si passa da 6315 accessi a 

-- Esercizio 11
EXPLAIN
SELECT CS.nome
FROM InsErogato AS IE JOIN Insegn AS I ON I.id = IE.id_insegn JOIN CorsoStudi AS CS ON CS.id = IE.id_corsostudi

EXCEPT 

SELECT CS.nome
FROM InsErogato AS IE JOIN Insegn AS I ON I.id = IE.id_insegn JOIN CorsoStudi AS CS ON CS.id = IE.id_corsostudi
WHERE I.nomeins ILIKE '%matematica%'

-- Con indici

DROP INDEX IF EXISTS CS_id;
DROP INDEX IF EXISTS I_id;
DROP INDEX IF EXISTS IE_id_insegn_cs;

CREATE INDEX CS_id ON CorsoStudi USING hash(id);
CREATE INDEX I_id ON Insegn USING hash(id);
CREATE INDEX IE_id_insegn_cs ON InsErogato(id_insegn, id_corsostudi);

ANALYZE CorsoStudi;
ANALYZE Insegn;
ANALYZE InsErogato;

-- Risposta: si passa da 15271 accessi a 9764
-- Indice inutilizzabile su ILIKE dato che il controllo è sulla parte centrale della stringa

-- Esercizio 12
EXPLAIN
SELECT IE.annoaccademico, CS.nome, SUM(IE.crediti) AS somma, MAX(IE.crediti) AS massimo, MIN(IE.crediti) AS minimo
FROM InsErogato AS IE JOIN CorsoStudi AS CS ON IE.id_corsostudi = CS.id
WHERE IE.modulo = 0
GROUP BY IE.annoaccademico, CS.nome

-- Con indice
DROP INDEX IF EXISTS CS_id;
DROP INDEX IF EXISTS IE_modulo;
DROP INDEX IF EXISTS IE_CS;

CREATE INDEX CS_id ON CorsoStudi USING hash(id);
CREATE INDEX IE_CS ON InsErogato USING hash(id_corsostudi);
CREATE INDEX IE_modulo ON InsErogato(modulo);
ANALYZE CorsoStudi;
ANALYZE InsErogato;

-- Risposta: si passa da 7408 accessi a 